// <auto-generated />
using ESports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ESports.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class DBConModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ESports.Models.Player", b =>
                {
                    b.Property<string>("PlayerNIC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrentTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerAge")
                        .HasColumnType("int");

                    b.Property<string>("PlayerFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerHand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerNIC");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ESports.Models.TrophyRegistration", b =>
                {
                    b.Property<string>("TrophyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlayerNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TrophyID");

                    b.HasIndex("PlayerNIC");

                    b.ToTable("TrophyRegistrations");
                });

            modelBuilder.Entity("ESports.Models.TrophyRegistration", b =>
                {
                    b.HasOne("ESports.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerNIC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
